Self-introduction

My background is in computer science and in cognitive science. I speak of myself as broady interdisciplinary person... I spend a lot of my life thinking about things at disciplinary boundaries. I was a member, I was, um, one of the people with design background, particularly from my HCI experience and cognitive science experience. I was a professor at MIT for 10 years before I left to help create a brand-new college.  I’ve been at Olin since before there were students... I was here a year before Rob and Jon.

The original Olin triangle

The original vision of the Olin curriculum before I was here had something to do with engineering and entrepreneurship. The 3 corners of the original Olin triangle [are] technology, society, and solving problems, with equal emphasis. “Technology and technical knowledge” being engineering, “society” being the AHS, and “solve problems” being entrepreneurship. If you didn’t hear design in that picture, that is not a coincidence. Given what we know now, we can say [that] it makes sense design would be in the middle of that… the curriculum was more about hands-on, experimental learning, which naturally led itself to some design work, but not necessarily human-centered design work.

Lynn’s definition(s) (sort of) of design(s)

"engineering design" seems like the easiest one [to define].  In the Olin context, it would be classes like software design, circuit design or mechanism design.  Those are all kinds of engineering design.  They’re all generative processes falling in their respective discipline. Every  engineering discipline has a generative process or some sorts of them that are part and parcel of that discipline.  That makes engineering different from science. 

When one thinks of engineering being fundamentally a creative act, creating a better widget, in the better sense of widget, it is not the fabrication of the widget, but figuring what that widget ought to be.  Engineering design is very narrow sometimes, one has a specific set of requirements.  One maybe even has specifications so, getting, there were, the specification bit, that is traditionally engineering design. 

We, at Olin, talk about design being a people-to-people activity and you’ve seen Mark’s picture of... not getting this exactly right...  Something like, people have... problems or opportunities which generate needs, which generate requirements, generating specifications, generating prototypes, creating products, that go back to people.

That picture is a picture of design in which engineering design is a component, but there's much more to that picture than engineering design. A graphic designer does something that is design, but it is not engineering design and not people-to-people design, either.  It is maybe another part of that process that is generative, but it is… in some ways, narrower than the people-to-people design.

Industrial design occupies a significant fraction of the people to people; product design occupies some of the people-to-people.  User design is maybe the whole continuum.  This encompasses the specifications and back to people.  Industrial design is usually more front loaded, so, all of those things are design.  Within a design, given a particular set of tools, design looks different.  Software design is different from circuit from circuit design, even if they share properties.  It is different from graphic design.

Design language

Using the language [of design], that is something we do easily now, as part of the culture...I think we did use some of those words [Partner year]. "Prototype," maybe; "pilot," definitely. "Design?" Probably. If you looked at those early documents, you would see language that maybe was more typical of traditional engineering design and less typical of the kind of user-centered design that feels like it is more at the heart of Olin. The majority of Olin faculty members were engineers or people who could pretend to be engineers.

Seeing the human connections

I don’t think I saw all of the connections [when I first arrived at Olin that] I see now.  In a lot of ways, curriculum design experience was the most human-centered of all the design I had done, even though I was designing human-computer interfaces. It’s the only field I worked in where the people were obvious.

If “Design at Olin” were a book, the table of contents would read...
Chapter 1:  We need a design experience in the fourth semester.  <several ideas of what this could be>
Chapter 2:  _*()&^&^, our design prof is leaving….we're hiring someone else, but really shouldn't we plan this already?
Chapter 3:  Ben, please save the day.  Jill and I will help you, but really, we defer to you as our design expert and will sit here quietly (or not :) )
I'm sure there's a Chapter 3.5 where Ben figures out he should bring in Chris or something; I don't recall how that magic happened.
Chapter 4:  Well, here we are.  Er.  Um.  Bike messengers!!!  (And campus police officers, and ER nurses, and a bunch of others.)
Chapter 4.5:  Really, when we say we can't tell you what to do, we're not just being snarky.  And yes, we do know what we're doing.  Why do you ask? (Or maybe not.  Ask Ben?)
Chapter 5:  Phew!  Don't have to do this one again for a year.  (But hey, that was pretty cool.)
Chapter 6 and 7 and 8:  We start using post-its in our meeting.  We start talking about things like "generative thinking".  We start figuring out what we did.  We teach HFID (well, I do) and it turns out that UOCD was useful after all.  We start to incorporate what we learned into how we think.
